{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { orderConstants } from \"./constants\";\nexport const getCustomerOrders = () => {\n  return async dispatch => {\n    dispatch({\n      type: orderConstants.GET_CUSTOMER_ORDER_REQUEST\n    });\n\n    try {\n      const res = await axios.post(\"/order/getCustomerOrders\");\n\n      if (res.status === 200) {\n        const {\n          orders\n        } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n          payload: {\n            orders\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const updateOrder = payload => {\n  return async dispatch => {\n    dispatch({\n      type: orderConstants.UPDATE_CUSTOMER_ORDER_REQUEST\n    });\n\n    try {\n      const res = await axios.post(\"/order/update\", payload);\n\n      if (res.status === 201) {\n        dispatch({\n          type: orderConstants.UPDATE_CUSTOMER_ORDER_SUCCESS\n        });\n        dispatch(getCustomerOrders());\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: orderConstants.UPDATE_CUSTOMER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/charr/Desktop/ahlem/admin/src/actions/order.action.js"],"names":["axios","orderConstants","getCustomerOrders","dispatch","type","GET_CUSTOMER_ORDER_REQUEST","res","post","status","orders","data","GET_CUSTOMER_ORDER_SUCCESS","payload","error","GET_CUSTOMER_ORDER_FAILURE","console","log","updateOrder","UPDATE_CUSTOMER_ORDER_REQUEST","UPDATE_CUSTOMER_ORDER_SUCCESS","UPDATE_CUSTOMER_ORDER_FAILURE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,cAAT,QAA+B,aAA/B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrC,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,cAAc,CAACI;AAAvB,KAAD,CAAR;;AACA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAW,0BAAX,CAAlB;;AACA,UAAID,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,cAAM;AAAEC,UAAAA;AAAF,YAAaH,GAAG,CAACI,IAAvB;AACAP,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEH,cAAc,CAACU,0BADd;AAEPC,UAAAA,OAAO,EAAE;AAAEH,YAAAA;AAAF;AAFF,SAAD,CAAR;AAID,OAND,MAMO;AACL,cAAM;AAAEI,UAAAA;AAAF,YAAYP,GAAG,CAACI,IAAtB;AACAP,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEH,cAAc,CAACa,0BADd;AAEPF,UAAAA,OAAO,EAAE;AAAEC,YAAAA;AAAF;AAFF,SAAD,CAAR;AAID;AACF,KAfD,CAeE,OAAOA,KAAP,EAAc;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF,GApBD;AAqBD,CAtBM;AAwBP,OAAO,MAAMI,WAAW,GAAIL,OAAD,IAAa;AACtC,SAAO,MAAOT,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,cAAc,CAACiB;AAAvB,KAAD,CAAR;;AACA,QAAI;AACF,YAAMZ,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAW,eAAX,EAA4BK,OAA5B,CAAlB;;AACA,UAAIN,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBL,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAEH,cAAc,CAACkB;AAAvB,SAAD,CAAR;AACAhB,QAAAA,QAAQ,CAACD,iBAAiB,EAAlB,CAAR;AACD,OAHD,MAGO;AACL,cAAM;AAAEW,UAAAA;AAAF,YAAYP,GAAG,CAACI,IAAtB;AACAP,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEH,cAAc,CAACmB,6BADd;AAEPR,UAAAA,OAAO,EAAE;AAAEC,YAAAA;AAAF;AAFF,SAAD,CAAR;AAID;AACF,KAZD,CAYE,OAAOA,KAAP,EAAc;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF,GAjBD;AAkBD,CAnBM","sourcesContent":["import axios from \"../helpers/axios\";\nimport { orderConstants } from \"./constants\";\n\nexport const getCustomerOrders = () => {\n  return async (dispatch) => {\n    dispatch({ type: orderConstants.GET_CUSTOMER_ORDER_REQUEST });\n    try {\n      const res = await axios.post(\"/order/getCustomerOrders\");\n      if (res.status === 200) {\n        const { orders } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n          payload: { orders },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateOrder = (payload) => {\n  return async (dispatch) => {\n    dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_REQUEST });\n    try {\n      const res = await axios.post(\"/order/update\", payload);\n      if (res.status === 201) {\n        dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_SUCCESS });\n        dispatch(getCustomerOrders());\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: orderConstants.UPDATE_CUSTOMER_ORDER_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}