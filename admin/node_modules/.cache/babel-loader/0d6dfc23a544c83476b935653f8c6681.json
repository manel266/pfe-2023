{"ast":null,"code":"import axios from \"axios\";\nimport { api } from \"../urlConfig\";\nimport store from \"../store\";\nimport { authConstants } from \"../actions/constants\";\nconst token = window.localStorage.getItem(\"token\");\nconst axiosIntance = axios.create({\n  baseURL: api,\n  headers: {\n    Authorization: token ? `Bearer ${token}` : \"\"\n  }\n});\naxiosIntance.interceptors.request.use(req => {\n  const {\n    auth\n  } = store.getState();\n\n  if (auth.token) {\n    req.headers.Authorization = `Bearer ${auth.token}`;\n  }\n\n  return req;\n});\naxiosIntance.interceptors.response.use(res => {\n  return res;\n}, error => {\n  const status = error.response ? error.response.status : 500;\n\n  if (status && status === 500) {\n    localStorage.clear();\n    store.dispatch({\n      type: authConstants.LOGOUT_SUCCESS\n    });\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosIntance;","map":{"version":3,"sources":["E:/ahlem/admin/src/helpers/axios.js"],"names":["axios","api","store","authConstants","token","window","localStorage","getItem","axiosIntance","create","baseURL","headers","Authorization","interceptors","request","use","req","auth","getState","response","res","error","status","clear","dispatch","type","LOGOUT_SUCCESS","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,MAAMC,YAAY,GAAGR,KAAK,CAACS,MAAN,CAAa;AAChCC,EAAAA,OAAO,EAAET,GADuB;AAEhCU,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAER,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADpC;AAFuB,CAAb,CAArB;AAOAI,YAAY,CAACK,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CAAuCC,GAAD,IAAS;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAWf,KAAK,CAACgB,QAAN,EAAjB;;AACA,MAAID,IAAI,CAACb,KAAT,EAAgB;AACdY,IAAAA,GAAG,CAACL,OAAJ,CAAYC,aAAZ,GAA6B,UAASK,IAAI,CAACb,KAAM,EAAjD;AACD;;AACD,SAAOY,GAAP;AACD,CAND;AAQAR,YAAY,CAACK,YAAb,CAA0BM,QAA1B,CAAmCJ,GAAnC,CACGK,GAAD,IAAS;AACP,SAAOA,GAAP;AACD,CAHH,EAIGC,KAAD,IAAW;AACT,QAAMC,MAAM,GAAGD,KAAK,CAACF,QAAN,GAAiBE,KAAK,CAACF,QAAN,CAAeG,MAAhC,GAAyC,GAAxD;;AACA,MAAIA,MAAM,IAAIA,MAAM,KAAK,GAAzB,EAA8B;AAC5BhB,IAAAA,YAAY,CAACiB,KAAb;AACArB,IAAAA,KAAK,CAACsB,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAEtB,aAAa,CAACuB;AAAtB,KAAf;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeP,KAAf,CAAP;AACD,CAXH;AAcA,eAAeb,YAAf","sourcesContent":["import axios from \"axios\";\nimport { api } from \"../urlConfig\";\nimport store from \"../store\";\nimport { authConstants } from \"../actions/constants\";\n\nconst token = window.localStorage.getItem(\"token\");\n\nconst axiosIntance = axios.create({\n  baseURL: api,\n  headers: {\n    Authorization: token ? `Bearer ${token}` : \"\",\n  },\n});\n\naxiosIntance.interceptors.request.use((req) => {\n  const { auth } = store.getState();\n  if (auth.token) {\n    req.headers.Authorization = `Bearer ${auth.token}`;\n  }\n  return req;\n});\n\naxiosIntance.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  (error) => {\n    const status = error.response ? error.response.status : 500;\n    if (status && status === 500) {\n      localStorage.clear();\n      store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosIntance;\n"]},"metadata":{},"sourceType":"module"}